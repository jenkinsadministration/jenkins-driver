<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
    <actions/>
    <description></description>
    <keepDependencies>false</keepDependencies>
    <properties>
        {% if log_rotate > 0 %}
            <jenkins.model.BuildDiscarderProperty>
                <strategy class="hudson.tasks.LogRotator">
                    <daysToKeep>-1</daysToKeep>
                    <numToKeep>{{log_rotate}}</numToKeep>
                    <artifactDaysToKeep>-1</artifactDaysToKeep>
                    <artifactNumToKeep>-1</artifactNumToKeep>
                </strategy>
            </jenkins.model.BuildDiscarderProperty>
        {% endif %}
        <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
        {% if show_parameters %}
        <hudson.model.ParametersDefinitionProperty>
             <parameterDefinitions>
                 {% include './partials/jenkins/_parameters.txt' with context %}
            </parameterDefinitions>
        </hudson.model.ParametersDefinitionProperty>
        {% endif %}
        {% include './partials/jenkins/_cron.txt' with context %}
    </properties>
    {% endif %}
    <concurrentBuild>false</concurrentBuild>
    <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.65">
        <script>
import hudson.model.*
import hudson.model.AbstractProject
import hudson.tasks.Mailer

{% include './partials/scripts/_retry_function.groovy' with context %}

def build_ok = true


BUILD_JOB_NAME = "${JOB_NAME}"

pipeline {
    agent { node { label 'CHECKER_Web' } }
    stages {
        {% include './partials/scripts/_set_build_name.groovy' with context %}
        {% include './partials/scripts/_slack_notification_starting.groovy' with context %}
        stage('Preparation') {
            steps {
                checkout([$class: 'GitSCM',
                    branches: [[name: "${params.Branch}"]],
                    extensions: [[$class: 'CloneOption', timeout: 120]],
                    gitTool: 'Default',
                    userRemoteConfigs: [[url: '{{repository}}']]
                ])
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    try {
                        sh "[ -s ~/.nvm/nvm.sh ] &amp;&amp;  ~/.nvm/nvm.sh &amp;&amp; nvm use 10 &amp;&amp; /Users/jenkins/.nvm/versions/node/v10.16.2/bin/yarn install --pure-lockfile"
                    } catch (exc) {
                        currentBuild.result = 'FAILED'
                        build_ok = false
                    }
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    try {
                        sh "[ -s ~/.nvm/nvm.sh ] &amp;&amp; ~/.nvm/nvm.sh &amp;&amp; nvm use 10 &amp;&amp; /Users/jenkins/.nvm/versions/node/v10.16.2/bin/yarn test"
                    } catch (exc) {
                        currentBuild.result = 'FAILED'
                        build_ok = false
                    }
                }
            }
        }
        stage('Set Status') {
            steps {
                script {
                    build job:
                        "PullRequestChecker/Set_PR_Status",
                        parameters: [
                            string(name: 'SHA', value: "${params.Branch}"),
                            string(name: 'Repository', value: "web"),
                            string(name: 'JobUrl', value: "${env.BUILD_URL}"),
                            booleanParam(name: 'Status', value: build_ok)
                        ],
                        propagate: false,
                        wait: false
                }
            }
        }
        {% include './partials/scripts/_slack_notification_finishing.groovy' with context %}
    }
}
        </script>
        <sandbox>true</sandbox>
    </definition>
    <triggers/>
    <disabled>false</disabled>
</flow-definition>