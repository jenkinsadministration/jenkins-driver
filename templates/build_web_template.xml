<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
    <actions/>
    <description></description>
    <keepDependencies>false</keepDependencies>
    <properties>
        {% if log_rotate > 0 %}
            <jenkins.model.BuildDiscarderProperty>
                <strategy class="hudson.tasks.LogRotator">
                    <daysToKeep>-1</daysToKeep>
                    <numToKeep>{{log_rotate}}</numToKeep>
                    <artifactDaysToKeep>-1</artifactDaysToKeep>
                    <artifactNumToKeep>-1</artifactNumToKeep>
                </strategy>
            </jenkins.model.BuildDiscarderProperty>
        {% endif %}
        <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
        {% if show_parameters %}
        <hudson.model.ParametersDefinitionProperty>
             <parameterDefinitions>
                 {% include 'partials/jenkins/_parameters.txt' ignore missing with context %}
            </parameterDefinitions>
        </hudson.model.ParametersDefinitionProperty>
        {% endif %}
        {% if cron['poll_scm'] != '' %}
            <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
              <triggers>
                    <hudson.triggers.SCMTrigger>
                        <spec>{{cron['poll_scm']}}</spec>
                    </hudson.triggers.SCMTrigger>
              </triggers>
            </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
        {% endif %}
    </properties>
    {% if cron['build'] != '' %}
        <triggers>
            <hudson.triggers.TimerTrigger>
                <spec>{{cron['build']}}</spec>
            </hudson.triggers.TimerTrigger>
        </triggers>
    {% endif %}
    <concurrentBuild>false</concurrentBuild>
    <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.65">
        <script>
import hudson.model.*
import hudson.model.AbstractProject
import hudson.tasks.Mailer

{% include 'partials/scripts/_retry_function.groovy' ignore missing with context %}


BUILD_JOB_NAME = "${JOB_NAME}"

pipeline {
    agent { node { label '{{label}}' } }
    stages {
        stage('Preparation') {
            steps {
                script {
                    currentBuild.displayName = "Build_" + "${BUILD_TIMESTAMP}"
                }
                checkout([$class: 'GitSCM',
                    branches: [[name: "{{branch}}"]],
                    extensions: [[$class: 'CloneOption', timeout: 120]],
                    gitTool: 'Default',
                    userRemoteConfigs: [[url: '{{repository}}']]
                ])
            }
        }
        {% if job_of_test != '' %}
        stage('Fire Tests') {
            steps {
                script {
                    def jenkins_url = "{{jenkins_url}}"
                }
                build job:
                    "{{job_of_test}}",
                    parameters: [
                        string(name: 'Suite', value: "REGRESSION"),
                        string(name: 'Reason_Of_Execution', value: "Nueva versión de la aplicación")
                    ],
                    propagate: false,
                    wait: false
            }
        }
        {% endif %}
    }
}
        </script>
        <sandbox>true</sandbox>
    </definition>
    <triggers/>
    <disabled>false</disabled>
</flow-definition>